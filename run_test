#!/bin/bash

# Run test scripts listed on the command line
#
# This is a modified version of https://gist.github.com/1300101.

if [ $# == 0 ]; then
    echo "Usage: $0 [test shell scripts]"
    exit 1
fi

# This function can be used in test scripts to indicate that
# the rest of the line is a command that is expected to fail.
header='
set -x
set -o errexit

function should_fail() {
    if "$@"; then
        echo "Command should have failed but did not:" "$@"
        exit 1
    fi
}
'

num_passed=0
num_tests=$#
for file in $@; do
    # Make a modified version of the test script that includes some settings and
    # functions.
    test_tmp=`mktemp $file.XXXX`
    (echo "$header"; cat $file) > $test_tmp

    logfile=`mktemp XXXX.log`

    printf "\033[90m$file\033[0m (logging to $logfile) "
    if bash $test_tmp > $logfile 2>&1; then 
        printf "\033[36m Passed \033[0m\n"
        num_passed=$((num_passed + 1))
    else
        printf "\033[31m Failed \033[0m\n"
    fi

    rm $test_tmp
done
echo "$num_passed of $num_tests tests passed."

